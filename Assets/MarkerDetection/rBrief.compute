#pragma kernel CSMain

RWStructuredBuffer<int> TestsX1Buffer;
RWStructuredBuffer<int> TestsY1Buffer;
RWStructuredBuffer<int> TestsX2Buffer;
RWStructuredBuffer<int> TestsY2Buffer;
RWStructuredBuffer<int2> KeypointsBuffer;
RWStructuredBuffer<uint> TestsOutBuffer;
RWTexture2D<float> Source;
uint TestsN;

[numthreads(32,2,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    uint keypointNumber = id.x;
    uint testGroupNumber = id.y;
    int2 keypoint = KeypointsBuffer[keypointNumber];
    uint result = 0;
    for (uint testNumber = 0; testNumber < 32; testNumber++) {
        uint testId = testGroupNumber*32+testNumber;
        int2 testPoint1 = int2(keypoint.x + TestsX1Buffer[testId], keypoint.y + TestsY1Buffer[testId]);
        int2 testPoint2 = int2(keypoint.x + TestsX2Buffer[testId], keypoint.y + TestsY2Buffer[testId]);
        if (Source[testPoint1] > Source[testPoint2]) {
            result = result | (1 << testNumber);
            //result = 2;
        }
    }
    //TestsOutBuffer[(TestsN/32*keypointNumber) + testGroupNumber] = result;
    TestsOutBuffer[keypointNumber*4+testGroupNumber] = result;
}
